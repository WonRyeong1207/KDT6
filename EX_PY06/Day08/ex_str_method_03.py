# 문자열을 구성하는 문자를 검사해주는 메서드 : isxxxx() 결과 논리형

# 알파벳으로 구성된 문자열인지 대문자인지 검사 : isupper()
data = "good"
print(f"{data} => {data.isupper()}")

# 알파벳으로 구성된 문자열인지 소문자인지 검사 : islower()
print(data.islower())

# 숫자와 문자가 혼합된 문자열 : isalnum()
print(f"dfdf12 => {'dfdf1212'.isalnum()}")

# 문자열이 숫자로 되어있는지 검사 : isdecimal()
print(f"1212 => {'1212'.isdecimal()}")

# 공백 문자 여부 검사 : isspace()
print(f"12234  => {'12234   '.isspace()}")

# 이외에도 다양한 메서드가 있음.

# -----------------------------------------------------------------------------
# 문자열 구성하는 문자 검사 메서드 => 변수명.isOOO()
# -----------------------------------------------------------------------------
# 문자열 내에 숫자 존재여부 체크 메서드들 3종류
# - 변수명.isnumeric()  : 0~9까지의 숫자, 5¹, 5₁, ①, ➊, ⅒, Ⅳ, ⅳ, 百
# - 변수명.isdigit()    : 0~9까지의 숫자, 5¹, 5₁, ①, ➊ 
# - 변수명.isdecimal()  : 0~9까지의 숫자
#    ==> 실수, 음수, 나머지 : False
# - isdecimal() < isdigit() < isnumeric()
# -----------------------------------------------------------------------------
