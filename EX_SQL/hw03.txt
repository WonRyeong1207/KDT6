# kdt6 황지원
# day 3 homework

use sqlclass_db;

# authors table 생성
drop table if exists authors;
create table authors
	(author_id int not null,
	 firstname varchar(20) not null,
	 lastname varchar(30) not null,
	 primary key (author_id)
	 );
desc authors;

# authors 값 입력
insert into authors(author_id, firstname, lastname)
values(1, 'Paul', 'Deitel'),
		(2, 'Harvey', 'Deitel'),
		(3, 'Abbey', 'Deitel'),
		(4, 'Dan', 'Quirk'),
		(5, 'Michael', 'Morgano');
select * from authors;

# titles table 생성
drop table if exists titles;
create table titles
	(isbn varchar(20) not null,
	 title varchar(100) not null,
	 edition_number int not null,
	 copyright varchar(4) not null,
	 primary key (isbn)
	);
desc titles;

# titles 값 입력하기
insert into titles(isbn, title, edition_number, copyright)
values('0132151006', 'Internet & World Wide Web How to Program', 5, '2012'),
	   ('0133807800', 'Java How to Program', 10, '2015'),
	   ('0132575655', 'Java How to Program, Late Objects, Version', 10, '2015'),
	   ('013299044x', 'C How to Program', 7, '2013'),
	   ('0132990601', 'Simply Visual Basic 2010', 4, '2013'),
	   ('0133406954', 'Visual Basic 2012 How to Program', 6, '2014'),
	   ('0133379337', 'Visual C# 2012 How to Program', 5, '2014'),
	   ('0136151574', 'Visual C++ How to Program', 2, '2008'),
	   ('0133378713', 'C++ How to Program', 9, '2014'),
	   ('0133764036', 'Android How to Program', 2, '2015'),
	   ('0133570924', 'Android for Programmers: An App-Driven Approach, Volume 1', 2, '2014'),
	   ('0132121360', 'Android for Programmers: An App-Driven Approach', 1, '2012');
select * from titles;

# author_isbn table 만들기
drop table if exists author_isbn;
create table author_isbn
	(author_id int not null,
	 isbn varchar(20) not null,
	 # primary key (author_id, isbn),
	 foreign key (author_id) references authors(author_id),
	 foreign key (isbn) references titles(isbn)
	);
desc author_isbn;

# author_isbn 값 입력하기
set foreign_key_checks = 0;
insert into author_isbn(author_id, isbn)
values(1, '0132151006'),
	   (2, '0132151006'),
	   (3, '0133807800'),
	   (1, '0132575655'),
	   (2, '013299044x'),
	   (1, '013299044x'),
	   (2, '0132575655'),
	   (1, '013299044x'),
	   (2, '013299044x'),
	   (1, '0132990601'),
	   (2, '0132990601'),
	   (3, '0132990601'),
	   (1, '0133406954'),
	   (2, '0133406964'),
	   (3, '0133406954'),
	   (1, '0133379337'),
	   (2, '0133379337'),
	   (1, '0136151574'),
	   (2, '0136151574'),
	   (4, '0136151574'),
	   (1, '0133378713'),
	   (2, '0133378713'),
	   (1, '0133764036'),
	   (2, '0133764036'),
	   (3, '0133764036'),
	   (1, '0133570924'),
	   (2, '0133570924'),
	   (3, '0133570924'),
	   (1, '0132121360'),
	   (2, '0132121360'),
	   (3, '0132121360'),
	   (5, '0132121360');
set foreign_key_checks = 1;
select * from author_isbn;

# Q1. titles 테이블에서 copyright가 2013년 이후의 책 정보를 정렬 후 출력
# - title, edition_number, copyright 필드를 copyright 필드의 내림차순으로 정렬, 2013년 포함
select title, edition_number, copyright from titles
where copyright >= '2013'
order by copyright desc;

# Q2. authors 테이블에서 lastname이 'D'로 시작하는 저자의 id, firstname, lastname 출력
select author_id, firstname, lastname from authors
where lastname like 'D%';

# Q3. authors 테이블에서 저자의 lastname의 두 번째 글자에 'o'를 포함하는 저자 정보 출력
select author_id, firstname, lastname from authors
where lastname like '_O%';

# Q4. authors 테이블에서 저자의 lastname, firstname 순으로 오름차순 정렬후 출력
select author_id, firstname, lastname from authors
order by lastname, firstname asc;

# Q5. titles 테이블에서 title 필드에 "How to Program"을 포함하는 책의 정보 출력
# - isbn, title, edition_number, copyright 출력, title 필드의 오름차순 정렬
select isbn, title, edition_number, copyright from titles
where title like '%How to Program%'
order by title asc;

# Q6. authors 테이블과 author_isbn 테이블을 내부 조인
# - 조인 기준: author_id가 동일
# - 출력 내용: firstname, lastname, isnb
# - 정렬 기준: lastname, firstname 기준 오름차순
select firstname, lastname, isbn from authors
inner join author_isbn
on authors.author_id = author_isbn.author_id
order by lastname, firstname asc;

# Q7. author_isbn 테이블과 titles 테이블을 내부 조인
# - 조인 기준: isbn 동일
# - 출력 내용: author_id, isbn, title, edition_number, copyright
# - 정렬 기준: isbn 내림차순
select author_id, titles.isbn, title, edition_number, copyright from titles
inner join author_isbn
on titles.isbn = author_isbn.isbn
order by isbn desc;

# Q8. lastname이 'Quirk'인 사람이 쓴 책 정보 출력
# - 출력 내용: firstname, lastname, title, isbn, copyright
select firstname, lastname, title, titles.isbn, copyright from titles
inner join author_isbn
on author_isbn.isbn = titles.isbn
inner join authors
on author_isbn.author_id = authors.author_id
where authors.lastname = 'Quirk';

# Q9. 'Paul Deitel' 또는 'Harvey Deitel'이 쓴 책 정보 출력
# - 출력 내용: firstname, lastname, title, isbn, copyright
select firstname, lastname, title, titles.isbn, copyright from titles
inner join author_isbn
on titles.isbn = author_isbn.isbn
inner join authors
on author_isbn.author_id = authors.author_id
where authors.firstname = 'Paul' or authors.firstname = 'Harvey';

# Q10. 'Abbey Deitel'과 'Harvey'이 공동 저자인 책 정보 출력
# - 출력 내용: title, isbn, copyright
select title, titles.isbn, copyright from titles
inner join author_isbn
on titles.isbn = author_isbn.isbn
inner join authors
on author_isbn.author_id = authors.author_id
where authors.firstname = 'Abbey'
intersect
select title, titles.isbn, copyright from titles
inner join author_isbn
on titles.isbn = author_isbn.isbn
inner join authors
on author_isbn.author_id = authors.author_id
where authors.firstname = 'Harvey';

