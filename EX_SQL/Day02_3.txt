use sakila;

# 5장
# join
# join의 종류: self join, gright join, full join, inner join, cross join, left join

# cross join, on 이 없으면 그렇게 인식
select c.first_name, c.last_name, a.address
from customer as c cross join address as a;

# 행 개수 확인
select count(*) from customer;								# 599
select count(*) from address;								# 603
select count(*) from customer as c join address as a;	# 361197

# inner join: 가장 일반적인 join 유형
select c.first_name , c.last_name, a.address, a.district
from customer as c inner join address as a
on c.address_id = a.address_id;

# 개수 확인
select count(*) from customer as c
inner join address as a on c.address_id = a.address_id;	# 599

# 3개 이상의 테이블을 join
# join 하려하는 table 정보 확인 !! 필수!!
desc city;

# join 할때 from의 테이블 순서는 관계없음. but !! 내부 join 조건은 맞춰야함
select c.first_name, c.last_name, ct.city, a.address, a.district, a.postal_code
from customer as c inner join address as a on c.address_id = a.address_id
					inner join city as ct on a.city_id = ct.city_id;
				
# address 와 city를 먼저 join하고 customper을 join
# 내부에서 데이터의 양을 미리 줄임. 원하는 것만 보겠다
select c.first_name, c.last_name, addr.address, addr.city, addr.district
from customer as c
inner join
	(select a.address_id, a.address, ct.city, a.district 
	 from address as a
		 inner join city as ct on a.city_id = ct.city_id
	 where a.district = 'California') as addr		# 조건을 넣어줌
on c.address_id = addr.address_id;

# 테이블 재사용
select f.title
from film as f
	inner join film_actor as fa
	on f.film_id = fa.film_id
	inner join actor as a
	on fa.actor_id = a.actor_id
where ((a.first_name = 'CATE' and a.last_name = 'MCQUEEN')
	or (a.first_name = 'CUBA' and a.last_name = 'BIRCH'));
# ')'에러가 있다는데 모르겠다.


# 두 배우가 같이 출연한 영화만 출력
# CATE MCQUEEN
select f.title, f.film_id, a1.first_name, a1.last_name
from film as f
	inner join film_actor as fa1
	on f.film_id = fa1. film_id
	inner join actor as a1
	on fa1.actor_id = a1.actor_id
where (a1.first_name = 'CATE' and a1.last_name = 'MCQUEEN');

# CUBA BIRCH
select  f.title, f.film_id, a2.first_name, a2.last_name
from film as f
	inner join film_actor as fa2
	on f.film_id = fa2.film_id
	inner join actor as a2
	on fa2.actor_id = a2.actor_id
where (a2.first_name = 'CUBA' and a2.last_name = 'BIRCH');

# 같이 출연한 것
select f.title
from film as f
	inner join film_actor as fa1
	on f.film_id = fa1.film_id
	inner join actor as a1
	on fa1.actor_id = a1.actor_id
	inner join film_actor as fa2
	on f.film_id = fa2.film_id
	inner join actor as a2
	on fa2.actor_id = a2.actor_id
where (a1.first_name = 'CATE' and a1.last_name = 'MCQUEEN')
	and (a2.first_name = 'CUBA' and a2.last_name = 'BIRCH');

# self join: 자기자신 join
use sqlclass_db;

create table customer
	(customer_id smallint unsigned,
	 first_name varchar(20),
	 last_name varchar(20),
	 birth_date date,
	 spouse_id smallint unsigned,
	 constraint primary key (customer_id));

desc customer;

insert into customer (customer_id, first_name, last_name, birth_date, spouse_id)
values
(1, 'John', 'Mayer', '1983-05-12', 2),
(2, 'Mary', 'Mayer', '1990-07-30', 1),
(3, 'Lisa', 'Ross', '1989-04-15', 5),
(4, 'Anna', 'Timothy', '1988-12-26', 6),
(5, 'Tim', 'Ross', '1957-08-15', 3), 
(6, 'Steve', 'Donell', '1967-07-09', 4);

insert into customer (customer_id, first_name, last_name, birth_date)
values (7, 'Donna', 'Trapp', '1978-06-23');

select * from customer;


# self join..
select
	cust.customer_id, cust.first_name, cust.last_name,
	cust.birth_date, cust.spouse_id,
	spouse.first_name as spouse_firstname,
	spouse.last_name as spouse_lastname
from customer as cust
	join customer as spouse
	on cust.spouse_id = spouse.customer_id;



desc nobel;
select  * from nobel;


